{"version":3,"sources":["components/Contacts/Contacts.module.scss","components/Filter/Filter.module.scss","components/Section/Section.js","components/Search/Search.js","components/Contacts/Contact.js","components/Contacts/Contacts.js","components/Filter/Filter.js","App.js","index.js","components/Search/Search.module.scss","components/Section/Section.module.scss"],"names":["module","exports","Section","children","title","className","s","Container","Title","Search","state","name","number","handleChange","e","currentTarget","value","setState","handleSubmit","preventDefault","props","onSubmit","reset","SearchForm","this","Form","type","pattern","required","onChange","Button","Component","Contact","id","deleteContact","onClick","Contacts","contacts","length","map","item","Filter","App","filter","formSubmitHandler","data","isUniqueName","find","elem","includes","alert","text","userId","nanoid","prevState","contactId","contact","filterContacts","console","log","normalizeFilter","toLowerCase","localStorage","getItem","parseContact","JSON","parse","prevProps","setItem","stringify","filterContact","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.09fd9f32.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Contact\":\"Contacts_Contact__fuVji\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Filter\":\"Filter_Filter__32T6D\"};","import PropTypes from 'prop-types';\nimport s from './Section.module.scss';\n\nconst Section = ({ children, title }) => {\n  return (\n    <section className={s.Section}>\n      <div className={s.Container}>\n        <h2 className={s.Title}>{title}</h2>\n        {children}\n      </div>\n    </section>\n  );\n};\n\nSection.propTypes = {\n  children: PropTypes.node,\n  title: PropTypes.string.isRequired,\n};\n\nexport default Section;\n","import { Component } from 'react';\nimport s from './Search.module.scss';\n\nclass Search extends Component {\n  state = {\n    name: '',\n    number: '',\n  };\n  handleChange = e => {\n    const { name, value } = e.currentTarget;\n    this.setState({\n      [name]: value,\n    });\n  };\n  handleSubmit = e => {\n    e.preventDefault();\n    this.props.onSubmit(this.state);\n    this.reset();\n  };\n  reset = () => {\n    this.setState({ name: '', number: '' });\n  };\n  render() {\n    return (\n      <form className={s.SearchForm} onSubmit={this.handleSubmit}>\n        <label className={s.Form}>\n          Name\n          <input\n            type=\"text\"\n            name=\"name\"\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n            required\n            value={this.state.name}\n            onChange={this.handleChange}\n          />\n        </label>\n        <label className={s.Form}>\n          Number\n          <input\n            type=\"tel\"\n            name=\"number\"\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n            required\n            value={this.state.number}\n            onChange={this.handleChange}\n          />\n        </label>\n        <button className={s.Button} type=\"submit\">\n          Add contact\n        </button>\n      </form>\n    );\n  }\n}\nexport default Search;\n","import PropTypes from 'prop-types';\nimport s from './Contacts.module.scss';\n\nconst Contact = ({ name, number, id, deleteContact }) => {\n  return (\n    <li className={s.Contact}>\n      <p>\n        {name}:{number}\n      </p>\n      <button onClick={() => deleteContact(id)}>Delete</button>\n    </li>\n  );\n};\nContact.propTypes = {\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n  id: PropTypes.string.isRequired,\n  deleteContact: PropTypes.func.isRequired,\n};\nexport default Contact;\n","import PropTypes from 'prop-types';\nimport s from './Contacts.module.scss';\nimport Contact from './Contact';\n\nconst Contacts = ({ contacts, deleteContact }) => {\n  return (\n    <ul>\n      {contacts.length > 0 &&\n        contacts.map(item => (\n          <Contact\n            key={item.id}\n            name={item.name}\n            number={item.number}\n            id={item.id}\n            deleteContact={deleteContact}\n          />\n        ))}\n    </ul>\n  );\n};\nContacts.propTypes = {\n  contacts: PropTypes.array.isRequired,\n  deleteContact: PropTypes.func.isRequired,\n};\nexport default Contacts;\n","import PropTypes from 'prop-types';\nimport s from './Filter.module.scss';\n\nconst Filter = ({ value, onChange }) => {\n  return (\n    <label className={s.Filter}>\n      Find contacts by name\n      <input\n        type=\"text\"\n        name=\"filter\"\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n        onChange={onChange}\n        value={value}\n      />\n    </label>\n  );\n};\n\nFilter.propTypes = {\n  value: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n};\n\nexport default Filter;\n","import { Component } from 'react';\nimport Section from 'components/Section/Section';\nimport Search from 'components/Search/Search';\nimport Contacts from 'components/Contacts/Contacts';\nimport Filter from 'components/Filter/Filter';\nimport { alert } from '@pnotify/core';\nimport '@pnotify/core/dist/PNotify.css';\nimport '@pnotify/core/dist/BrightTheme.css';\nimport { nanoid } from 'nanoid';\n\nclass App extends Component {\n  state = {\n    contacts: [],\n    filter: '',\n  };\n  formSubmitHandler = data => {\n    let isUniqueName = this.state.contacts.find(elem =>\n      elem.name.includes(data.name),\n    );\n\n    if (isUniqueName) {\n      const myAlert = alert({\n        title: 'Alert',\n        text: `${isUniqueName.name} is already in contacts`,\n      });\n    } else {\n      const userId = { id: nanoid() };\n      this.setState(prevState => ({\n        contacts: [...prevState.contacts, { ...userId, ...data }],\n      }));\n    }\n  };\n  handleChange = e => {\n    const { name, value } = e.currentTarget;\n    this.setState({\n      [name]: value,\n    });\n  };\n  deleteContact = contactId => {\n    this.setState(prevState => ({\n      contacts: prevState.contacts.filter(contact => contact.id !== contactId),\n    }));\n  };\n  filterContacts = () => {\n    console.log('111');\n    const normalizeFilter = this.state.filter.toLowerCase();\n    return this.state.contacts.filter(contact =>\n      contact.name.toLowerCase().includes(normalizeFilter),\n    );\n  };\n  componentDidMount() {\n    const contact = localStorage.getItem('contacts');\n    const parseContact = JSON.parse(contact);\n    if (parseContact) {\n      this.setState({ contacts: parseContact });\n    }\n  }\n  componentDidUpdate(prevProps, prevState) {\n    if (this.state.contacts !== prevProps.contacts) {\n      localStorage.setItem('contacts', JSON.stringify(this.state.contacts));\n    }\n  }\n  render() {\n    const filterContact = this.filterContacts();\n    return (\n      <>\n        <Section title={'Phonebook'}>\n          <Search onSubmit={this.formSubmitHandler} />\n        </Section>\n        <Section title={'Contacts'}>\n          <Filter value={this.state.filter} onChange={this.handleChange} />\n          <Contacts\n            contacts={filterContact}\n            deleteContact={this.deleteContact}\n          />\n        </Section>\n      </>\n    );\n  }\n}\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App.js';\nimport './style/index.scss';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"SearchForm\":\"Search_SearchForm__2k-pr\",\"Button\":\"Search_Button__3pyFa\",\"Form\":\"Search_Form__1xq4L\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Section\":\"Section_Section__1nnQk\",\"Container\":\"Section_Container__3lNzs\",\"Title\":\"Section_Title__3E2Z3\"};"],"sourceRoot":""}